(define (maak-teller)
  (let ((result 0))

    (define (toets bedrag)
      (set! result (+ result bedrag)))

    (define (reset)
      (set! result 0))

    (define (dispatch msg)
      (cond ((eq? msg 'toets) toets)
            ((eq? msg 'lees) result)
            ((eq? msg 'reset) (reset))
            (else (error "wrong message"))))
    dispatch))

(define (maak-winkelkassa)
  (let ((saldo (maak-teller))
        (te-betalen (maak-teller))
        (ingetoetst 'product)
        (ontvangen 0))

    (define (toets type bedrag)
      (set! ingetoetst type)
      (cond  ((eq? type 'product)
              ((te-betalen 'toets) bedrag))
             ((eq? type 'ontvangen)
              (set! ontvangen bedrag))
             (else (error "wrong type"))))

    (define (enter)
      (if (eq? ingetoetst 'product)
          (te-betalen 'lees)
          (let ((wisselgeld (- ontvangen (te-betalen 'lees))))
            ((saldo 'toets) (te-betalen 'lees))
            (te-betalen 'reset)
            wisselgeld)))

    (define (inhoud)
      (saldo 'lees))

    (define (afsluiten)
      (let ((teruggeven saldo))
        (set! saldo 0)
        teruggeven))

    (define (dispatch msg)
      (cond ((eq? msg 'toets) toets)
            ((eq? msg 'enter) (enter))
            ((eq? msg 'inhoud) (inhoud))
            ((eq? msg 'afsluiten) (afsluiten))
            (else (error "wrong message"))))
    dispatch))

(define teller (maak-teller))
(define winkelkassa (maak-winkelkassa))
((winkelkassa 'toets) 'product 20)
((teller 'toets) 20)
((winkelkassa 'toets) 'product 5)
(and (= (teller 'lees) 20)
     (begin (teller 'reset)
            (= (teller 'lees) 0))
     (= (winkelkassa 'enter) 25)
     (= (begin ((winkelkassa 'toets) 'product 10)
               (winkelkassa 'enter))
        35)
     (begin ((winkelkassa 'toets) 'ontvangen 50)
            (= (winkelkassa 'enter) 15))
     (= (winkelkassa 'inhoud) 35))
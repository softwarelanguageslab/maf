name: Daily MAF tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  schedule:
    - cron: '00 22 * * 1,2,3,4' # Executes every night Mon-Thu at 23:00 CET or 00:00 CEST (schedule expressed in UTC).

jobs:
  # Checks whether the repository was updated within the last 25 hours (provide some overlap) and sets an environment flag.
  # Inspired by: * https://github.community/t/trigger-workflow-if-there-is-commit-in-last-24-hours/17074
  #              * https://github.com/rotators/Fo1in2/blob/33b3f45a9fd69757c8e8a5e698197cccadf8a1ae/.github/workflows/schedule.yml#L22-L65
  #activity-check:
  #  name: Activity check
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Activity check
  #      run: |
  #        curl -sL https://api.github.com/repos/$GITHUB_REPOSITORY/commits | jq -r '[.[]][0]' > $HOME/latest-commit.json
  #        date="$(jq -r '.commit.author.date' $HOME/latest-commit.json)"
  #        timestamp=$(date --utc -d "$date" +%s)
  #        hours=$(( ( $(date --utc +%s) - $timestamp ) / 3600 ))
  #        rm -f $HOME/latest-commit.json
  #        if [$hours -le 25]; then
  #          echo ::set-env name=MAF_REPO_ACTIVE::true
  #        fi
  #      shell: bash
  # The compile job fetches the code and attempts to compile it.
  compile:
    name: Compile MAF
    runs-on: ubuntu-latest
  #  needs: activity-check
  #  if: env.MAF_REPO_ACTIVE == 'true'
    steps:
      # Send a notification to Slack.
      - name: Notify push
        id: slack
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: maf-logs
          status: STARTED
          color: warning
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      # Check out the GitHub repository.
      - name: Checkout the repository
        uses: actions/checkout@v2
      # Compile the code.
      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: openjdk@1.15
      - name: Compile MAF
        run: sbt compile
  # The test-util job executes the tests for utilities of the framework, on which the analyses rely.
  test-util:
    name: Execute utility tests
    runs-on: ubuntu-latest
    needs: compile
    steps:
      # Check out the GitHub repository.
      - name: Checkout the repository
        uses: actions/checkout@v2
      # Compile the code.
      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: openjdk@1.15
      - name: Run utility tests
        run: sbt "maf/testOnly -- -n UtilityTest"
      # If failed, update the Slack notification.
      - name: Notify slack fail
        if: failure() || cancelled()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: maf-logs
          status: FAILED
          color: danger
  # The test-lattice job executes the lattice tests.
  test-lattice:
    name: Execute lattice tests
    runs-on: ubuntu-latest
    needs: compile
    steps:
      # Check out the GitHub repository.
      - name: Checkout the repository
        uses: actions/checkout@v2
      # Compile the code.
      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: openjdk@1.15
      - name: Run lattice tests
        run: sbt "maf/testOnly maf.test.language.scheme.SchemeLatticeTests"
      # If failed, update the Slack notification.
      - name: Notify slack fail
        if: failure() || cancelled()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: maf-logs
          status: FAILED
          color: danger
  # The test-R5RS job executes the R5RS tests.
  test-R5RS:
    name: Execute primitive tests
    runs-on: ubuntu-latest
    needs: compile
    steps:
      # Check out the GitHub repository.
      - name: Checkout the repository
        uses: actions/checkout@v2
      # Compile the code.
      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: openjdk@1.15
      - name: Run R5RS tests
        run: sbt "maf/testOnly maf.test.language.scheme.SchemeR5RSTests"
      # If failed, update the Slack notification.
      - name: Notify slack fail
        if: failure() || cancelled()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: maf-logs
          status: FAILED
          color: danger
  # The test-parser job executes the parser tests.
  test-parser:
    name: Execute parser tests
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      # Compile the code.
      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: openjdk@1.15
      - name: Run parser tests
        run: sbt "maf/testOnly maf.test.language.scheme.ParserTests"
      # If failed, update the Slack notification.
      - name: Notify slack fail
        if: failure() || cancelled()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: maf-logs
          status: FAILED
          color: danger
  # The test-interpreter job executes the interpreter tests.
  test-interpreter:
    name: Execute interpreter tests
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      # Compile the code.
      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: openjdk@1.15
      - name: Run interpreter tests
        run: sbt "maf/testOnly maf.test.language.scheme.InterpreterTests"
      # If failed, update the Slack notification.
      - name: Notify slack fail
        if: failure() || cancelled()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: maf-logs
          status: FAILED
          color: danger
  # The test-soundness job executes the soundness tests.
  test-soundness:
    name: Execute soundness tests (using ${{ matrix.test_class }})
    runs-on: ubuntu-latest
    needs: compile
    timeout-minutes: 480 # 8 hours
    strategy:
      fail-fast: false
      matrix:
        test_class: [ BigStepSchemeModFSoundnessTests, SmallStepSchemeModFSoundnessTests, SmallStepSchemeModConcSoundnessTests ]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      # Compile the code.
      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: openjdk@1.15
      - name: Run soundness tests
        run: sbt "maf/testOnly maf.test.modular.scheme.${{ matrix.test_class }}"
        env: 
          LOG_ENV: ci
          LOG_LOCATION: log-${{ github.sha }}
      # If failed, update the Slack notification.
      - name: Notify slack fail
        if: failure() || cancelled()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: maf-logs
          status: FAILED
          color: danger

  notify-success:
    name: Notify success
    runs-on: ubuntu-latest
    needs: [
              test-util,
              test-lattice,
              test-R5RS,
              test-parser,
              test-interpreter,
              test-soundness
           ]
    steps:
      # Send a notification to Slack.
      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: maf-logs
          status: SUCCESS
          color: good
